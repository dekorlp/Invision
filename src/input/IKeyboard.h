#ifndef IKEYBOARD_H
#define IKEYBOARD_H

namespace Invision
{
	namespace InputLib
	{
		enum Type
		{
			INVISON_KEYBOARD_WINDOWS,
			INVISON_KEYBOARD_LINUX,
			INVISON_KEYBOARD_UNKNOWN
		};
	}

	enum KeyState
	{
		INVISION_KEY_PRESSED = 0xFFFF,
		INVISION_KEY_RELEASED = 0x1000,
	};

	enum Key
	{
		INVISION_KEY_LBUTTON = 0x01,
		INVISION_KEY_RBUTTON = 0x02,
		INVISION_KEY_MBUTTON = 0x03,
		INVISION_KEY_XBUTTON1 = 0x04,
		INVISION_KEY_XBUTTON2 = 0x05,
		INVISION_KEY_BACK = 0x06,
		INVISION_KEY_TAB = 0x07,
		INVISION_KEY_CLEAR = 0x08,
		INVISION_KEY_RETURN = 0x09,
		INVISION_KEY_SHIFT = 0x0A,
		INVISION_KEY_CTRL = 0x0B,
		INVISION_KEY_ALT = 0x0C,
		INVISION_KEY_PAUSE = 0x0D,
		INVISION_KEY_CAPITAL = 0x0E,
		INVISION_KEY_ESCAPE = 0x0F,
		INVISION_KEY_SPACE = 0x10,
		INVISION_KEY_PAGEUP = 0x11,
		INVISION_KEY_PAGEDOWN = 0x12,
		INVISION_KEY_END = 0x13,
		INVISION_KEY_HOME = 0x14,
		INVISION_KEY_LEFT_ARROW = 0x15,
		INVISION_KEY_UP_ARROW = 0x16,
		INVISION_KEY_RIGHT_ARROW = 0x17,
		INVISION_KEY_DOWN_ARROW = 0x18,
		INVISION_KEY_EXECUTE = 0x1A,
		INVISION_KEY_PRINT = 0x1B,
		INVISION_KEY_INSERT = 0x1C,
		INVISION_KEY_DELETE = 0x1D,
		INVISION_KEY_NUM_0 = 0x30,
		INVISION_KEY_NUM_1 = 0x31,
		INVISION_KEY_NUM_2 = 0x32,
		INVISION_KEY_NUM_3 = 0x33,
		INVISION_KEY_NUM_4 = 0x34,
		INVISION_KEY_NUM_5 = 0x35,
		INVISION_KEY_NUM_6 = 0x36,
		INVISION_KEY_NUM_7 = 0x37,
		INVISION_KEY_NUM_8 = 0x38,
		INVISION_KEY_NUM_9 = 0x39,
		INVISION_KEY_A = 0x41,
		INVISION_KEY_B = 0x42,
		INVISION_KEY_C = 0x43,
		INVISION_KEY_D = 0x44,
		INVISION_KEY_E = 0x45,
		INVISION_KEY_F = 0x46,
		INVISION_KEY_G = 0x47,
		INVISION_KEY_H = 0x48,
		INVISION_KEY_I = 0x49,
		INVISION_KEY_J = 0x4A, 
		INVISION_KEY_K = 0x4B,
		INVISION_KEY_L = 0x4C,
		INVISION_KEY_M = 0x4D,
		INVISION_KEY_N = 0x4E,
		INVISION_KEY_O = 0x4F,
		INVISION_KEY_P = 0x50,
		INVISION_KEY_Q = 0x51,
		INVISION_KEY_R = 0x52,
		INVISION_KEY_S = 0x53,
		INVISION_KEY_T = 0x54,
		INVISION_KEY_U = 0x55,
		INVISION_KEY_V = 0x56,
		INVISION_KEY_W = 0x57,
		INVISION_KEY_X = 0x58,
		INVISION_KEY_Y = 0x59,
		INVISION_KEY_Z = 0x5A,
		INVISION_KEY_NUMPAD0 = 0x60,
		INVISION_KEY_NUMPAD1 = 0x61,
		INVISION_KEY_NUMPAD2 = 0x62,
		INVISION_KEY_NUMPAD3 = 0x63,
		INVISION_KEY_NUMPAD4 = 0x64,
		INVISION_KEY_NUMPAD5 = 0x65,
		INVISION_KEY_NUMPAD6 = 0x66,
		INVISION_KEY_NUMPAD7 = 0x67,
		INVISION_KEY_NUMPAD8 = 0x68,
		INVISION_KEY_NUMPAD9 = 0x69,
		INVISION_KEY_MULTIPLY = 0x6A,
		INVISION_KEY_ADD = 0x6B,
		INVISION_KEY_SEPARATOR = 0x6C,
		INVISION_KEY_SUBTRACT = 0x6D,
		INVISION_KEY_DECIMAL = 0x6E,
		INVISION_KEY_DIVIDE = 0x6F,
		INVISION_KEY_F1 = 0x70,
		INVISION_KEY_F2 = 0x71,
		INVISION_KEY_F3 = 0x72,
		INVISION_KEY_F4 = 0x73,
		INVISION_KEY_F5 = 0x74,
		INVISION_KEY_F6 = 0x75,
		INVISION_KEY_F7 = 0x76,
		INVISION_KEY_F8 = 0x77,
		INVISION_KEY_F9 = 0x78,
		INVISION_KEY_F10 = 0x79,
		INVISION_KEY_F11 = 0x7A,
		INVISION_KEY_F12 = 0x7B,
		INVISION_KEY_NUMLOCK = 0x90,
		INVISION_KEY_SCROLL = 0x91,
	};

	class IKeyboard
	{
	public:
		INVISION_API IKeyboard(InputLib::Type inputType);

		INVISION_API virtual bool GetStateOfKey(Invision::Key key, Invision::KeyState keystate) = 0;


		INVISION_API ~IKeyboard();
	protected:
		InputLib::Type Type_ = InputLib::INVISON_KEYBOARD_UNKNOWN;

	};
}
#endif